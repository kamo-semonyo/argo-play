releaseEnv: local
loki:
  # disbale multi tenant mode - which makes X-Scope-OrgID header not required
  auth_enabled: false
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 1
  pattern_ingester:
    enabled: true
  limits_config:
    # allows opentelemetry type logs
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h
  compactor:
    retention_enabled: true 
    delete_request_store: s3
  storage:
    bucketNames:
      chunks: loki
      ruler: loki
      admin: loki
    s3:
      s3: "http://minio:minio123@{{ .Release.name }}-minio.{{ .Release.namespace }}.svc.cluster.local:9000"
      endpoint: http://{{ .Release.name }}-minio.{{ .Release.namespace }}.svc.cluster.local:9000
      s3ForcePathStyle: true
      access_key_id: "minio"
      secret_access_key: "minio123"
      insecure: true
      region: null
      sse_encryption: false
      http_config:
        idle_conn_timeout: 90s
        response_header_timeout: 0s
        insecure_skip_verify: true

chunksCache:
  # default memory is 8192Mi
  allocatedMemory: 2028

deploymentMode: SimpleScalable

backend:
  # default is 2
  replicas: 1
  affinity:
    # prevents the same pod deployment on the same node
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: none-exitsing-service
          topologyKey: kubernetes.io/hostname
read:
  # at least 2 replicase are required
  replicas: 2
  affinity:
    # prevents the same pod deployment on the same node
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: none-exitsing-service
          topologyKey: kubernetes.io/hostname
write:
  # default is 2 replicas
  replicas: 2
  affinity:
    # prevents the same pod deployment on the same node
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: none-exitsing-service
          topologyKey: kubernetes.io/hostname

# Enable minio for storage
minio:
  enabled: true
  serviceAccount:
    create: true
    # set custom service account name to avoid mimir service account duplication
    name: "loki-minio-sa"

gateway:
  service:
    type: ClusterIP